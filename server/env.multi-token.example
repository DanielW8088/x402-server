# Server Configuration
PORT=4021

# Network (base-sepolia or base)
NETWORK=base-sepolia

# RPC URLs (optional, defaults to public RPCs)
# Base Mainnet RPC
BASE_RPC_URL=https://mainnet.base.org
# Base Sepolia RPC
BASE_SEPOLIA_RPC_URL=https://sepolia.base.org

# Server Private Key (for MINTER_ROLE)
# This account will automatically be granted MINTER_ROLE when deploying new tokens
# Used by the server to process mint requests
SERVER_PRIVATE_KEY=0x...

# Excess USDC Recipient Address
# After LP deployment, excess USDC (beyond LP requirements) will be sent here
# If not set, excess USDC will be sent to the token deployer address
EXCESS_RECIPIENT_ADDRESS=0x...

# USDC Contract Address (optional, auto-detected based on network)
# Base Sepolia: 0x036CbD53842c5426634e7929541eC2318f3dCF7e
# Base Mainnet: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913
# USDC_CONTRACT_ADDRESS=0x036CbD53842c5426634e7929541eC2318f3dCF7e

# Coinbase CDP API Keys (required for mainnet)
# Get yours at: https://portal.cdp.coinbase.com/
CDP_API_KEY_ID=
CDP_API_KEY_SECRET=

# PostgreSQL Database Connection (REQUIRED for multi-token system)
# Format: postgresql://username:password@hostname:port/database
DATABASE_URL=postgresql://postgres:password@localhost:5432/token_mint

# Database SSL Configuration
# Set to 'false' to completely disable SSL (not recommended for production)
# Default: true (SSL enabled for remote databases)
# DB_SSL_ENABLED=true

# Database SSL Certificates (optional, for production databases requiring cert auth)
# Leave empty to use default SSL with rejectUnauthorized: false
# Set these paths if your database requires certificate authentication (e.g., Google Cloud SQL)
# DB_SSL_CA=/path/to/server-ca.pem
# DB_SSL_CERT=/path/to/client-cert.pem
# DB_SSL_KEY=/path/to/client-key.pem

# Queue Configuration (optional, defaults below)
BATCH_INTERVAL_SECONDS=10
MAX_BATCH_SIZE=50

# Important Notes:
# 1. USDC should be sent to each token contract address (not a central address)
# 2. Each token mint server needs MINTER_ROLE on the respective token contract
# 3. LP deployment is manual - use the deployLiquidity.js script after max mints reached
# 4. Excess USDC from LP deployment is automatically sent to EXCESS_RECIPIENT_ADDRESS

