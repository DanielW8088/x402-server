# x402 Token Mint Server Configuration
# Copy this file to .env and fill in your values

# Network: base-sepolia (testnet) or base (mainnet)
NETWORK=base-sepolia

# Server private key - needs MINTER_ROLE on the token contract
# This key is used to call the mint() function on the contract
SERVER_PRIVATE_KEY=0x...

# Token contract address
TOKEN_CONTRACT_ADDRESS=0x...

# USDC contract address (for traditional payment verification)
# Base Sepolia: 0x036CbD53842c5426634e7929541eC2318f3dCF7e
# Base Mainnet: 0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913
USDC_CONTRACT_ADDRESS=0x036CbD53842c5426634e7929541eC2318f3dCF7e

# Address to receive USDC payments
PAY_TO_ADDRESS=0x...

# Required payment amount in USDC (without decimals)
REQUIRED_PAYMENT_USDC=1

# Server port
PORT=4021

# =============================================================================
# CDP API Keys (REQUIRED for mainnet, NOT needed for testnet)
# =============================================================================
# Get your API keys at: https://portal.cdp.coinbase.com/
# 
# Steps to get CDP API keys:
# 1. Sign up at https://portal.cdp.coinbase.com/
# 2. Create a new project
# 3. Go to "API Keys" section
# 4. Create new API key
# 5. Copy the API Key ID and Secret below
#
# For testnet (base-sepolia): Leave these commented out or empty
# For mainnet (base): These are REQUIRED
CDP_API_KEY_ID=
CDP_API_KEY_SECRET=

# Notes:
# - SERVER_PRIVATE_KEY is used to call the mint function (requires MINTER_ROLE)
# - PAY_TO_ADDRESS is where you receive USDC payments
# - x402 Facilitator handles payment verification, so you don't need USDC_CONTRACT_ADDRESS
# - Server still needs ETH for gas to call mint()
# 
# Testnet vs Mainnet:
# - Testnet (base-sepolia): Uses public facilitator (https://x402.org/facilitator)
#   * No CDP API keys needed
#   * Free to test
# 
# - Mainnet (base): Uses Coinbase CDP facilitator
#   * CDP API keys REQUIRED
#   * Your endpoint will be listed in x402 Bazaar
#   * Real USDC payments

